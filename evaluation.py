def check_late(board):
    minor_white_pieces = 0
    minor_black_pieces = 0
    white_queen = 0
    black_queen = 0
    for i in board:
        minor_white_pieces += i.count('r') + i.count('b') + i.count('n')
        minor_black_pieces += i.count('R') + i.count('B') + i.count('N')
        white_queen += i.count('q')
        black_queen += i.count('Q')
    serial = (white_queen == 0 or (white_queen == 1 and minor_white_pieces == 1)) + (black_queen == 0 or (black_queen == 1 and minor_black_pieces == 1))
    return serial == 2


def analyze_current_state(board):
    white = 0
    black = 0
    for i in range(8):
        for j in range(8):
            if board[i][j] == 'p':
                white += 10
                white += white_pawn_board[i][j]
            elif board[i][j] == 'P':
                black += 10
                black += black_pawn_board[i][j]
            elif board[i][j] == 'r':
                white += 50
                white += white_rook_board[i][j]
            elif board[i][j] == 'R':
                black += 50
                black += black_rook_board[i][j]
            elif board[i][j] == 'n':
                white += 30
                white += white_knight_board[i][j]
            elif board[i][j] == 'N':
                black += 30
                black += black_knight_board[i][j]
            elif board[i][j] == 'b':
                white += 30
                white += white_bishop_board[i][j]
            elif board[i][j] == 'B':
                black += 30
                black += black_bishop_board[i][j]
            elif board[i][j] == 'q':
                white += 90
                white += white_queen_board[i][j]
            elif board[i][j] == 'Q':
                black += 90
                black += black_queen_board[i][j]
            elif board[i][j] == 'k':
                white += 900
                if (check_late(board)):
                    white += white_king_late_board[i][j]
                else:
                    white += white_king_early_board[i][j]
            elif board[i][j] == 'K':
                black += 900
                if (check_late(board)):
                    black += black_king_late_board[i][j]
                else:
                    black += black_king_early_board[i][j]
    return white - black

white_pawn_board = [[100, 50, 10, 5, 0, 5, 5, 0],
                    [100, 50, 10, 5, 0, -5, 10, 0],
                    [100, 50, 20, 10, 0, -10, 10, 0],
                    [100, 50, 30, 25, 20, 0, -20, 0],
                    [100, 50, 30, 25, 20, 0, -20, 0],
                    [100, 50, 20, 10, 0, -10, 10, 0],
                    [100, 50, 10, 5, 0, -5, 10, 0],
                    [100, 50, 10, 5, 0, 5, 5, 0]]

white_knight_board = [[-50, -40, -30, -30, -30, -30, -40, -50],
                      [-40, -20, 5, 0, 5, 0, -20, -40],
                      [-30, 0, 10, 15, 15, 10, 0, -30],
                      [-30, 5, 15, 20, 20, 15, 0, -30],
                      [-30, 5, 15, 20, 20, 15, 0, -30],
                      [-30, 0, 10, 15, 15, 10, 0, -30],
                      [-40, -20, 5, 0, 5, 0, -20, -40],
                      [-50, -40, -30, -30, -30, -30, -40, -50]]

white_bishop_board = [[-20, -10, -10, -10, -10, -10, -10, -20],
                      [-10, 0, 0, 5, 0, 10, 5, -10],
                      [-10, 0, 5, 5, 10, 10, 0, -10],
                      [-10, 0, 10, 10, 10, 10, 0, -10],
                      [-10, 0, 10, 10, 10, 10, 0, -10],
                      [-10, 0, 5, 5, 10, 10, 0, -10],
                      [-10, 0, 0, 5, 0, 10, 5, -10],
                      [-20, -10, -10, -10, -10, -10, -10, -20]]

white_rook_board = [[0, 5, -5, -5, -5, -5, -5, 0],
                    [0, 10, 0, 0, 0, 0, 0, 0],
                    [0, 10, 0, 0, 0, 0, 0, 0],
                    [0, 10, 0, 0, 0, 0, 0, 5],
                    [0, 10, 0, 0, 0, 0, 0, 5],
                    [0, 10, 0, 0, 0, 0, 0, 0],
                    [0, 10, 0, 0, 0, 0, 0, 0],
                    [0, 5, -5, -5, -5, -5, -5, 0]]

white_queen_board = [[-20, -10, -10, -5, 0, -10, -10, -20],
                     [-10, 0, 0, 0, 0, 5, 0, -10],
                     [-10, 0, 5, 5, 5, 5, 5, -10],
                     [-5, 0, 5, 5, 5, 5, 0, -5],
                     [-5, 0, 5, 5, 5, 5, 0, -5],
                     [-10, 0, 5, 5, 5, 5, 0, -10],
                     [-10, 0, 0, 0, 0, 0, 0, -10],
                     [-20, -10, -10, -5, -5, -10, -10, -20]]

white_king_early_board = [[-30, -30, -30, -30, -20, -10, 20, 20],
                          [-40, -40, -40, -40, -30, -20, 20, 30],
                          [-40, -40, -40, -40, -30, -20, 0, 10],
                          [-50, -50, -50, -50, -40, -20, 0, 0],
                          [-50, -50, -50, -50, -40, -20, 0, 0],
                          [-40, -40, -40, -40, -30, -20, 0, 10],
                          [-40, -40, -40, -40, -30, -20, 20, 30],
                          [-30, -30, -30, -30, -20, -10, 20, 20]]

white_king_late_board = [[-50, -30, -30, -30, -30, -30, -30, -50],
                         [-40, -20, -10, -10, -10, -10, -30, -30],
                         [-30, -10, 20, 30, 30, 20, 0, -30],
                         [-20, 0, 30, 40, 40, 30, 0, -30],
                         [-20, 0, 30, 40, 40, 30, 0, -30],
                         [-30, -10, 20, 30, 30, 20, 0, -30],
                         [-40, -20, -10, -10, -10, -10, -30, -30],
                         [-50, -30, -30, -30, -30, -30, -30, -50]]

black_pawn_board = [[0, 5, 5, 0, 5, 10, 50, 100],
                    [0, 10, -5, 0, 5, 10, 50, 100],
                    [0, 10, -10, 0, 10, 20, 50, 100],
                    [0, -20, 0, 20, 25, 30, 50, 100],
                    [0, -20, 0, 20, 25, 30, 50, 100],
                    [0, 10, -10, 0, 10, 20, 50, 100],
                    [0, 10, -5, 0, 5, 10, 50, 100],
                    [0, 5, 5, 0, 5, 10, 50, 100]]

black_knight_board = [[-50, -40, -30, -30, -30, -30, -40, -50],
                      [-40, -20, 0, 5, 0, 5, -20, -40],
                      [-30, 0, 10, 15, 15, 10, 0, -30],
                      [-30, 0, 15, 20, 20, 15, 5, -30],
                      [-30, 0, 15, 20, 20, 15, 5, -30],
                      [-30, 0, 10, 15, 15, 10, 0, -30],
                      [-40, -20, 0, 5, 0, 5, -20, -40],
                      [-50, -40, -30, -30, -30, -30, -40, -50]]

black_bishop_board = [[-20, -10, -10, -10, -10, -10, -10, -20],
                      [-10, 5, 10, 0, 5, 0, 0, -10],
                      [-10, 0, 10, 10, 5, 5, 0, -10],
                      [-10, 0, 10, 10, 10, 10, 0, -10],
                      [-10, 0, 10, 10, 10, 10, 0, -10],
                      [-10, 0, 10, 10, 5, 5, 0, -10],
                      [-10, 5, 10, 0, 5, 0, 0, -10],
                      [-20, -10, -10, -10, -10, -10, -10, -20]]

black_rook_board = [[0, -5, -5, -5, -5, -5, 5, 0],
                    [0, 0, 0, 0, 0, 0, 10, 0],
                    [0, 0, 0, 0, 0, 0, 10, 0],
                    [5, 0, 0, 0, 0, 0, 10, 0],
                    [5, 0, 0, 0, 0, 0, 10, 0],
                    [0, 0, 0, 0, 0, 0, 10, 0],
                    [0, 0, 0, 0, 0, 0, 10, 0],
                    [0, -5, -5, -5, -5, -5, 5, 0]]

black_queen_board = [[-20, -10, -10, 0, -5, -10, -10, -20],
                     [-10, 0, 5, 0, 0, 0, 0, -10],
                     [-10, 5, 5, 5, 5, 5, 0, -10],
                     [-5, 0, 5, 5, 5, 5, 0, -5],
                     [-5, 0, 5, 5, 5, 5, 0, -5],
                     [-10, 0, 5, 5, 5, 5, 0, -10],
                     [-10, 0, 0, 0, 0, 0, 0, -10],
                     [-20, -10, -10, -5, -5, -10, -10, -20]]

black_king_early_board = [[20, 20, -10, -20, -30, -30, -30, -30],
                          [30, 20, -20, -30, -40, -40, -40, -40],
                          [10, 0, -20, -30, -40, -40, -40, -40],
                          [0, 0, -20, -40, -50, -50, -50, -50],
                          [0, 0, -20, -40, -50, -50, -50, -50],
                          [10, 0, -20, -30, -40, -40, -40, -40],
                          [30, 20, -20, -30, -40, -40, -40, -40],
                          [20, 20, -10, -20, -30, -30, -30, -30]]

black_king_late_board = [[-50, -30, -30, -30, -30, -30, -30, -50],
                         [-30, -30, -10, -10, -10, -10, -20, -40],
                         [-30, 0, 20, 30, 30, 20, -10, -30],
                         [-30, 0, 30, 40, 40, 30, 0, -20],
                         [-30, 0, 30, 40, 40, 30, 0, -20],
                         [-30, 0, 20, 30, 30, 20, -10, -30],
                         [-30, -30, -10, -10, -10, -10, -20, -40],
                         [-50, -30, -30, -30, -30, -30, -30, -50]]